{"version":3,"file":"js/app.ec458242.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/App.vue","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue","webpack://dapp-robonomics.network/./src/components/Header.vue","webpack://dapp-robonomics.network/./src/utils/tools.js","webpack://dapp-robonomics.network/./src/components/Header.vue?801b","webpack://dapp-robonomics.network/./src/hooks/useRobonomics.js","webpack://dapp-robonomics.network/./src/hooks/useDevices.js","webpack://dapp-robonomics.network/./src/hooks/useSubscription.js","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue?a356","webpack://dapp-robonomics.network/./src/App.vue?7ccd","webpack://dapp-robonomics.network/./src/plugins/ipfs.js","webpack://dapp-robonomics.network/./src/plugins/robonomicsAccountManager.js","webpack://dapp-robonomics.network/./src/plugins/robonomics.js","webpack://dapp-robonomics.network/./src/views/Home.vue","webpack://dapp-robonomics.network/./src/views/Home.vue?9051","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue?dbdf","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue","webpack://dapp-robonomics.network/./src/hooks/useAccount.js","webpack://dapp-robonomics.network/./src/hooks/useBalance.js","webpack://dapp-robonomics.network/./src/hooks/useSend.js","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue?116c","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue","webpack://dapp-robonomics.network/./src/utils/encryptor.js","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue?d6aa","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue","webpack://dapp-robonomics.network/./src/views/RwsSetupNew.vue?1f64","webpack://dapp-robonomics.network/./src/views/Services.vue","webpack://dapp-robonomics.network/./src/views/Services.vue?0e03","webpack://dapp-robonomics.network/./src/views/Telemetry.vue","webpack://dapp-robonomics.network/./src/hooks/useIpfs.js","webpack://dapp-robonomics.network/./src/utils/telemetry.js","webpack://dapp-robonomics.network/./src/views/Telemetry.vue?cdd8","webpack://dapp-robonomics.network/./src/router.js","webpack://dapp-robonomics.network/./src/store.js","webpack://dapp-robonomics.network/./src/utils/filters.js","webpack://dapp-robonomics.network/./src/main.js","webpack://dapp-robonomics.network/webpack/bootstrap","webpack://dapp-robonomics.network/webpack/runtime/amd options","webpack://dapp-robonomics.network/webpack/runtime/chunk loaded","webpack://dapp-robonomics.network/webpack/runtime/compat get default export","webpack://dapp-robonomics.network/webpack/runtime/create fake namespace object","webpack://dapp-robonomics.network/webpack/runtime/define property getters","webpack://dapp-robonomics.network/webpack/runtime/global","webpack://dapp-robonomics.network/webpack/runtime/hasOwnProperty shorthand","webpack://dapp-robonomics.network/webpack/runtime/make namespace object","webpack://dapp-robonomics.network/webpack/runtime/node module decorator","webpack://dapp-robonomics.network/webpack/runtime/jsonp chunk loading","webpack://dapp-robonomics.network/webpack/startup"],"sourcesContent":["<template>\n  <main-layout v-if=\"isReady\" :title=\"title\">\n    <router-view />\n  </main-layout>\n</template>\n\n<script>\nimport MainLayout from \"@/components/layouts/Main.vue\";\nimport { inject, ref, watch } from \"vue\";\nimport { useRoute, useRouter } from \"vue-router\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  name: \"App\",\n  components: {\n    MainLayout\n  },\n  setup() {\n    const RobonomicsProvider = inject(\"RobonomicsProvider\");\n    const IpfsProvider = inject(\"IpfsProvider\");\n    const store = useStore();\n    const router = useRouter();\n    const route = useRoute();\n\n    const title = ref();\n\n    store.commit(\"rws/setKey\", process.env.VUE_APP_ROBONOMICS_UI_KEY);\n    store.dispatch(\"rws/init\");\n\n    store.commit(\n      \"rws/setLinkActivate\",\n      router.resolve({ name: \"rwsActivate\" }).path\n    );\n    store.commit(\"rws/setLinkSetup\", router.resolve({ name: \"rwsSetup\" }).path);\n    store.commit(\n      \"rws/setLinkSetupnew\",\n      router.resolve({ name: \"rwsSetupNew\" }).path\n    );\n    store.commit(\n      \"rws/setLinkDevices\",\n      router.resolve({ name: \"telemetry\" }).path\n    );\n    store.commit(\"ipfs/setGateways\", IpfsProvider.gateways);\n\n    watch(route, () => {\n      title.value = route?.meta?.title;\n      document.title = title.value\n        ? `${title.value} – Robonomics Network dApp`\n        : \"Robonomics Network dApp\";\n    });\n\n    return {\n      isReady: RobonomicsProvider.isReady,\n      title\n    };\n  }\n};\n</script>\n","<template>\n  <robo-layout>\n    <dapp-header :title=\"title\" />\n    <slot />\n  </robo-layout>\n</template>\n\n<script>\nimport DappHeader from \"@/components/Header\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  components: {\n    DappHeader\n  },\n  setup() {\n    const store = useStore();\n    const subscription = useSubscription();\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.active,\n      (v) => {\n        subscription.owner.value = v;\n      },\n      { immediate: true }\n    );\n\n    watch(\n      [subscription.owner, subscription.validUntil],\n      () => {\n        store.commit(\"rws/setExpiredate\", subscription.validUntil.value);\n      },\n      { immediate: true }\n    );\n  }\n};\n</script>\n","<template>\n  <robo-layout-header\n    logoIcon=\"images/logo-white.svg\"\n    :navigation=\"navigation\"\n    :title=\"title\"\n    :version=\"version\"\n  />\n</template>\n\n<script>\nimport { fromUnit, round } from \"@/utils/tools\";\nimport axios from \"axios\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Robonomics Dapp\"\n    }\n  },\n  inject: [\"RobonomicsProvider\"],\n  data() {\n    return {\n      navigation: [\n        {\n          title: \"Other\",\n          links: [\n            {\n              title: \"Services\",\n              link: this.$router.resolve({ name: \"services\" }).path,\n              type: \"router\"\n            }\n          ]\n        },\n\n        {\n          title: \"Tokenomics\",\n          links: [\n            {\n              title: \"Uniswap\",\n              link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n              type: \"external\"\n            },\n            {\n              title: \"About XRT\",\n              link: \"https://robonomics.network/xrt/\",\n              type: \"external\"\n            }\n          ]\n        },\n\n        {\n          title: \"Tools\",\n          links: [\n            {\n              title: \"Substrate Portal\",\n              link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer\",\n              type: \"external\"\n            },\n            {\n              title: \"Subscan\",\n              link: \"https://robonomics.subscan.io/\",\n              type: \"external\"\n            },\n            {\n              title: \"Polkassembly\",\n              link: \"https://robonomics.polkassembly.io/\",\n              type: \"external\"\n            }\n          ]\n        },\n\n        {\n          title: \"Kusama XCM\",\n          links: [\n            {\n              title: \"Moonriver\",\n              link: \"https://apps.moonbeam.network/moonriver\",\n              type: \"external\"\n            },\n            {\n              title: \"Basilisk\",\n              link: \"https://app.basilisk.cloud/pools-and-farms\",\n              type: \"external\"\n            },\n            {\n              title: \"Solarbeam\",\n              link: \"https://analytics.solarbeam.io/pairs/0x5261e0ce96289e6c3a16da45a2e52d1ab1a0e9c3\",\n              type: \"external\"\n            }\n          ]\n        }\n      ],\n      version: \" \"\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    \"$store.state.robonomicsUIvue.polkadot.extensionObj\": function (value) {\n      if (\n        value.signer &&\n        value.signer.signRaw &&\n        this.$store.state.robonomicsUIvue.polkadot.address\n      ) {\n        this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address);\n      }\n    },\n    \"$store.state.robonomicsUIvue.polkadot.address\": {\n      handler: function (value) {\n        if (\n          value &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw\n        ) {\n          this.handlerAccount(value);\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    try {\n      const res = await axios.get(\n        \"https://api.github.com/repos/airalab/dapp.robonomics.network/releases/latest\"\n      );\n      if (res.data.tag_name) {\n        this.version = res.data.tag_name;\n      }\n    } catch (_) {\n      console.log(\"dApp version not found.\");\n    }\n  },\n  methods: {\n    async handlerAccount(address) {\n      if (this.unsubscribeBalance) {\n        this.unsubscribeBalance();\n      }\n      const account = this.$store.state.robonomicsUIvue.polkadot.accounts.find(\n        (item) => item.address === address\n      );\n      if (!account) {\n        return;\n      }\n      await this.robonomics.accountManager.setSender(address, {\n        type: account.type,\n        extension: this.$store.state.robonomicsUIvue.polkadot.extensionObj\n      });\n      this.unsubscribeBalance = await this.robonomics.account.getBalance(\n        address,\n        (r) => {\n          const transferable = r.free.sub(r.feeFrozen);\n          this.$store.commit(\n            \"polkadot/setBalanceXRT\",\n            round(\n              fromUnit(\n                transferable,\n                this.robonomics.api.registry.chainDecimals[0]\n              ),\n              4\n            )\n          );\n        }\n      );\n    }\n  }\n};\n</script>\n","import Decimal from \"decimal.js-light\";\n\nDecimal.set({\n  toExpNeg: -31,\n  toExpPos: 31\n});\n\nexport function toDecimal(v) {\n  return new Decimal(v.toString());\n}\n\nexport function round(v, place) {\n  return toDecimal(v).todp(place);\n}\n\nexport function fromUnit(v, decimals = 0, dp) {\n  return toDecimal(v)\n    .div(new Decimal(10).pow(decimals.toString()))\n    .todp(dp)\n    .toString();\n}\n\nexport function toUnit(v, decimals = 0) {\n  return toDecimal(v).mul(new Decimal(10).pow(decimals.toString())).toString();\n}\n","import { render } from \"./Header.vue?vue&type=template&id=779a1619\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { inject, toRaw } from \"vue\";\n\nexport function useRobonomics() {\n  const { instance } = inject(\"RobonomicsProvider\");\n  return toRaw(instance).value;\n}\n","import { validateAddress } from \"@polkadot/util-crypto\";\nimport { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useDevices = (initialOwner = null) => {\n  const robonomics = useRobonomics();\n  const owner = ref(initialOwner);\n  const devices = ref([]);\n\n  const loadDevices = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await robonomics.rws.getDevices(owner.value);\n        devices.value = result.map((item) => {\n          return item.toHuman();\n        });\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    devices.value = [];\n  };\n  watch(\n    owner,\n    async () => {\n      await loadDevices();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    devices,\n    loadDevices\n  };\n};\n","import { validateAddress } from \"@polkadot/util-crypto\";\nimport { computed, reactive, ref, toRaw, watch } from \"vue\";\nimport { useDevices } from \"./useDevices\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useSubscription = (initialOwner = null) => {\n  const owner = ref(initialOwner);\n  const dataRaw = reactive({ value: null });\n\n  const robonomics = useRobonomics();\n  const { devices, loadDevices } = useDevices(owner);\n\n  const getReferenceCallWeight = () => {\n    return robonomics.api.consts.rws.referenceCallWeight;\n  };\n\n  const getLedger = async (owner) => {\n    const res = await robonomics.rws.getLedger(owner);\n    if (!res.isEmpty) {\n      return res.value;\n    }\n    return;\n  };\n\n  const DAYS_TO_MS = 24 * 60 * 60 * 1000;\n\n  const getFreeWeightCalc = async (owner) => {\n    const ledger = await getLedger(owner);\n    if (!ledger) {\n      return -1;\n    }\n\n    const freeWeight = ledger.freeWeight.toNumber();\n    const lastUpdate = ledger.lastUpdate.toNumber();\n    const issueTime = ledger.issueTime.toNumber();\n\n    const referenceCallWeight = getReferenceCallWeight();\n    const now = Date.now();\n\n    let utps = (() => {\n      let tps;\n      if (ledger.kind.isLifetime) {\n        tps = ledger.kind.value.tps.toNumber();\n      } else {\n        const days = ledger.kind.value.days.toNumber();\n        const duration_ms = days * DAYS_TO_MS;\n        if (now < issueTime + duration_ms) {\n          tps = 10000;\n        } else {\n          tps = 0;\n        }\n      }\n      return tps;\n    })();\n\n    const delta = now - lastUpdate;\n    return Math.floor(\n      freeWeight + (referenceCallWeight * utps * delta) / 1000000000\n    );\n  };\n\n  const validUntil = computed(() => {\n    if (dataRaw.value === null) {\n      return \"\";\n    }\n    const dataRawObject = toRaw(dataRaw);\n    if (dataRawObject.value.kind.isLifetime) {\n      return null;\n    }\n    const issue_time = dataRawObject.value.issueTime.toNumber();\n    let days = 0;\n    if (dataRawObject.value.kind.isDaily) {\n      days = dataRawObject.value.kind.value.days.toNumber();\n    }\n    return issue_time + days * DAYS_TO_MS;\n  });\n\n  const countMonth = computed(() => {\n    if (dataRaw.value === null) {\n      return 0;\n    }\n    const dataRawObject = toRaw(dataRaw);\n    let days = 0;\n    if (dataRawObject.value.kind.isDaily) {\n      days = dataRawObject.value.kind.value.days.toNumber();\n    }\n    return days / 30;\n  });\n\n  const isActive = computed(() => {\n    if (\n      dataRaw.value === null ||\n      (validUntil.value !== null && Date.now() > validUntil.value)\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasSubscription = computed(() => {\n    return dataRaw.value !== null;\n  });\n\n  const loadLedger = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const ledger = await getLedger(owner.value);\n        if (ledger) {\n          dataRaw.value = ledger;\n          return;\n        }\n        // eslint-disable-next-line no-empty\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    dataRaw.value = null;\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadLedger();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    dataRaw,\n    hasSubscription,\n    isActive,\n    countMonth,\n    validUntil,\n    loadLedger,\n    devices,\n    loadDevices,\n    getFreeWeightCalc\n  };\n};\n","import { render } from \"./Main.vue?vue&type=template&id=0ade3142\"\nimport script from \"./Main.vue?vue&type=script&lang=js\"\nexport * from \"./Main.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=766d0092\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport { create } from \"ipfs-http-client\";\nimport { ref } from \"vue\";\n\nclass IpfsApiClient {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  _create() {\n    this.client = create({\n      ...this._options()\n    });\n  }\n  _options() {\n    return {\n      url: this.endpoint,\n      headers: {\n        authorization: `Basic ${this.authHeader}`,\n        robonomics: this.robonomics\n      }\n    };\n  }\n  isAuth() {\n    return !!this.authHeader && !!this.robonomics;\n  }\n  auth(owner, address, signature) {\n    const authHeaderRaw = `sub-${address}:${signature}`;\n    this.authHeader = Buffer.from(authHeaderRaw).toString(\"base64\");\n    this.robonomics = owner;\n    this._create();\n  }\n  authClear() {\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  async ls(cid) {\n    const files = [];\n    for await (const file of this.client.ls(cid)) {\n      if (file.type === \"file\") {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async cat(cid) {\n    const cat = async (cid) => {\n      const decoder = new TextDecoder();\n      let content = \"\";\n      for await (const chunk of this.client.cat(cid)) {\n        content += decoder.decode(chunk, {\n          stream: true\n        });\n      }\n      return content;\n    };\n    return await cat(cid);\n  }\n  async add(data) {\n    return await this.client.add(data);\n  }\n  async catViaGateway(gateway, cid, attempts = 5) {\n    for (let index = 1; index <= attempts; index++) {\n      try {\n        return (await axios.get(`${gateway}${cid}`)).data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGateways(gateways, cid) {\n    for (const gateway of gateways) {\n      try {\n        return {\n          gateway,\n          result: await this.catViaGateway(gateway, cid)\n        };\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n}\n\nexport default {\n  install: (app, params) => {\n    const instance = ref();\n    app.provide(\"IpfsProvider\", {\n      instance,\n      gateways: params.gateways || []\n    });\n    instance.value = new IpfsApiClient(params.api.gateway);\n  }\n};\n","import { u8aToHex, u8aWrapBytes } from \"@polkadot/util\";\nimport { AccountManager } from \"robonomics-interface\";\n\nexport default class AccountManagerDapp extends AccountManager {\n  constructor(keyring, config = {}, api = null) {\n    super(keyring, api);\n    this.extension = null;\n    keyring.loadAll(config);\n    this.setReady(true);\n  }\n\n  async beforeSetSender(address, { type, extension }) {\n    this.extension = extension;\n    try {\n      this.keyring.getPair(address);\n      // eslint-disable-next-line no-empty\n    } catch (_) {\n      this.keyring.loadInjected(address, {}, type);\n    }\n  }\n\n  async afterSetSender() {\n    if (this.account.meta.isInjected && this.extension) {\n      this.api.setSigner(this.extension.signer);\n      this.account.signMsg = async (data) => {\n        return (\n          await this.extension.signer.signRaw({\n            address: this.account.address,\n            data: u8aToHex(u8aWrapBytes(data)),\n            type: \"bytes\"\n          })\n        ).signature;\n      };\n    }\n  }\n}\n","import keyring from \"@polkadot/ui-keyring\";\nimport { Robonomics } from \"robonomics-interface\";\nimport { reactive, ref, toRaw } from \"vue\";\nimport AccountManager from \"./robonomicsAccountManager\";\n\nexport default {\n  install: async (app, params) => {\n    const isReady = ref(false);\n    const instance = reactive({ value: undefined });\n    app.provide(\"RobonomicsProvider\", {\n      isReady,\n      instance\n    });\n    instance.value = await Robonomics.createInstance(params);\n    toRaw(instance).value.setAccountManager(new AccountManager(keyring));\n    isReady.value = true;\n  }\n};\n","<template>\n  <robo-layout-section>\n    <robo-grid\n      offset=\"x0\"\n      gap=\"x1\"\n      valign=\"start\"\n      galign=\"start\"\n      minColumnWidth=\"550px\"\n      maxColumnWidth=\"1fr\"\n    >\n      <!-- {\n                  src: 'https://static.robonomics.network/dapp/Robonomics-smart-home-intro.webm',\n                  type: 'video/webm'\n                },\n                {\n                  src: 'https://static.robonomics.network/dapp/Robonomics-smart-home-intro.mp4',\n                  type: 'video/mp4'\n                } -->\n\n      <robo-video\n        autoplay\n        loop\n        :sources=\"[\n          {\n            src: 'https://crustipfs.art/ipfs/QmStCDsEHCYwVYvnDdmZBMnobPmrgZx3iJLm65b8XNzKQa',\n            type: 'video/mp4'\n          }\n        ]\"\n        script=\"<p>Robonomics is a decentralized cloud service that can be used to enhance\n                your smart home system. It addresses two main problems: the lack of\n                control over data shared with vendors or third parties, and the vulnerability of\n                smart homes to centralized cloud server shutdowns.</p>\n                <p>With Robonomics, you can take advantage of its secure,\n                  serverless, and decentralized cloud service to improve the functionality of\n                  your smart home. Plus, you can use it with a wide range of Zigbee smart devices\n                  to automate and control various aspects of your home.</p>\n                <p>Installing Robonomics on top of Home Assistant is easy, and there are\n                   several options to choose from. Simply select the method that works best for you\n                   and your smart home on wiki.robonomics.network.</p>\"\n      />\n\n      <robo-grid-item align=\"stretch\">\n        <robo-grid\n          offset=\"x0\"\n          gap=\"x1\"\n          minColumnWidth=\"270px\"\n          maxColumnWidth=\"1fr\"\n        >\n          <robo-card fixedButton>\n            <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n              <robo-icon icon=\"current-version\" size=\"big\" />\n              <div>\n                <robo-text title=\"4\">Your RWS subscriptions</robo-text>\n              </div>\n            </robo-grid>\n            <robo-button :router=\"store.state.robonomicsUIvue.rws.links.list\">\n              View details\n            </robo-button>\n          </robo-card>\n\n          <robo-card :pale=\"rws?.length < 1\" fixedButton>\n            <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n              <robo-icon icon=\"plug\" size=\"big\" />\n              <div>\n                <robo-text title=\"4\">Control smart devices</robo-text>\n              </div>\n            </robo-grid>\n            <robo-button\n              :router=\"store.state.robonomicsUIvue.rws.links.devices\"\n              :disabled=\"rws?.length < 1\"\n            >\n              Manage devices\n            </robo-button>\n          </robo-card>\n\n          <robo-card :pale=\"rws?.length < 1\" fixedButton>\n            <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n              <robo-icon icon=\"user-group\" size=\"big\" />\n              <div>\n                <robo-text title=\"4\">Share your telemetry</robo-text>\n              </div>\n            </robo-grid>\n            <robo-button\n              :router=\"store.state.robonomicsUIvue.rws.links.users\"\n              :disabled=\"rws?.length < 1\"\n            >\n              Manage Users\n            </robo-button>\n          </robo-card>\n\n          <robo-card>\n            <robo-text title=\"4\" offset=\"x0\">Need help?</robo-text>\n            <robo-grid gap=\"x05\" offset=\"x1\">\n              <robo-text size=\"small\" weight=\"bold\">\n                <robo-link href=\"https://wiki.robonomics.network\">\n                  Wiki\n                </robo-link>\n                - Tutorials\n              </robo-text>\n              <robo-text size=\"small\" weight=\"bold\">\n                <robo-link\n                  href=\"https://github.com/airalab/dapp.robonomics.network\"\n                >\n                  Github</robo-link\n                >\n                - Bugs & improvements\n              </robo-text>\n              <robo-text size=\"small\" weight=\"bold\">\n                <robo-link href=\"https://discord.gg/JpaN2XAmqY\">\n                  Discord\n                </robo-link>\n                - Team support\n              </robo-text>\n            </robo-grid>\n          </robo-card>\n        </robo-grid>\n      </robo-grid-item>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\n// /* + get rws */\nconst store = useStore();\nconst rws = computed(() => {\n  return store.state.robonomicsUIvue.rws.list;\n});\n/* - get rws */\n</script>\n","import script from \"./Home.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Home.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\nexport default {\n  created: function () {\n    window.location.href = `https://v0.dapp.robonomics.network/${this.$route.href}`;\n  }\n};\n</script>\n","import script from \"./PathNotFound.vue?vue&type=script&lang=js\"\nexport * from \"./PathNotFound.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-buy\n      :price=\"price\"\n      activationtime=\"2\"\n      :available=\"freeAuctions\"\n      :rwsExpiration=\"expiredate\"\n      @on-activate=\"onActivate\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useBalance } from \"@/hooks/useBalance\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watchEffect } from \"vue\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    let unsubscribeBlock = null;\n\n    const robonomics = useRobonomics();\n    const { account, unsubscribe: unsubscribeAccount } = useAccount();\n    const { balance, unsubscribe: unsubscribeBalance } = useBalance(account);\n    const subscription = useSubscription(account);\n    const devices = useDevices(account);\n\n    (async () => {\n      freeAuctions.value = (await robonomics.rws.getFreeAuctions()).length;\n      unsubscribeBlock = await robonomics.events.onBlock(async () => {\n        freeAuctions.value = (await robonomics.rws.getFreeAuctions()).length;\n      });\n\n      const minimalBid = await robonomics.rws.getMinimalBid();\n      price.value = minimalBid.add(bnToBn(1));\n    })();\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n      if (unsubscribeBalance) {\n        unsubscribeBalance();\n      }\n      unsubscribeAccount();\n    });\n\n    const transaction = useSend();\n    const onActivate = async (setStatus) => {\n      if (\n        !balance.value ||\n        bnToBn(balance.value).add(bnToBn(1000000000)).lt(price.value)\n      ) {\n        setStatus(\n          \"error\",\n          \"Subscription can not be activated due to unsuffcicient XRT balance\"\n        );\n        return;\n      }\n      if (freeAuctions.value <= 0) {\n        setStatus(\"error\", \"There are no available subscriptions\");\n        return;\n      }\n      if (subscription.hasSubscription.value && subscription.isActive.value) {\n        setStatus(\"error\", \"You have an active subscription\");\n        return;\n      }\n\n      let call = robonomics.rws.bid(\n        Number(await robonomics.rws.getFirtsFreeAuction()),\n        price.value\n      );\n      if (!devices.devices.value.includes(account.value)) {\n        call = robonomics.api.tx.utility.batch([\n          call,\n          robonomics.rws.setDevices([...devices.devices.value, account.value])\n        ]);\n      }\n      const tx = transaction.createTx();\n      await transaction.send(tx, call);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n        }\n        return;\n      }\n\n      const unsubscribeBlock = await robonomics.events.onBlock(() => {\n        subscription.loadLedger();\n      });\n      const stopWatchEffect = watchEffect(() => {\n        if (subscription.hasSubscription.value && subscription.isActive.value) {\n          stopWatchEffect();\n          unsubscribeBlock();\n          setStatus(\"ok\");\n        }\n      });\n    };\n\n    const priceFormat = computed(() => {\n      return fromUnit(price.value, robonomics.api.registry.chainDecimals[0]);\n    });\n\n    return {\n      freeAuctions,\n      price: priceFormat,\n      expiredate: subscription.validUntil,\n      onActivate\n    };\n  }\n};\n</script>\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useAccount = () => {\n  const account = ref(null);\n  const robonomics = useRobonomics();\n  if (robonomics.accountManager.account) {\n    account.value = robonomics.accountManager.account.address;\n  }\n  const unsubscribe = robonomics.accountManager.onChange((res) => {\n    account.value = res.address;\n  });\n  return { account, unsubscribe };\n};\n","import { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useBalance = (account) => {\n  const balance = ref(null);\n  const robonomics = useRobonomics();\n  let unsubscribe;\n  watch(account, async () => {\n    if (unsubscribe) {\n      unsubscribe();\n    }\n    unsubscribe = await robonomics.account.getBalance(account.value, (r) => {\n      balance.value = r.free.sub(r.feeFrozen).toNumber();\n    });\n  });\n  return { balance, unsubscribe };\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\nimport { useSubscription } from \"./useSubscription\";\n\nexport const useSend = () => {\n  const robonomics = useRobonomics();\n  const { getFreeWeightCalc } = useSubscription();\n\n  const getCallWeight = async (tx, signer) => {\n    if (!signer) {\n      if (robonomics.accountManager.account) {\n        signer = robonomics.accountManager.account.address;\n      } else {\n        throw new Error(\"Signer required\");\n      }\n    }\n    return (await tx.paymentInfo(signer)).weight.toNumber();\n  };\n\n  const checkWeight = async (tx, owner) => {\n    const freeWeightCalc = await getFreeWeightCalc(owner);\n    if (freeWeightCalc < 0) {\n      throw new Error(`Not found ledger ${owner}`);\n    }\n    const callWeight = await getCallWeight(tx);\n    if (callWeight > freeWeightCalc) {\n      throw new Error(\n        `The origin account have no enough free weight to process these call. Call weight ${callWeight}, Free weight ${freeWeightCalc}`\n      );\n    }\n  };\n\n  const createTx = () => {\n    const result = ref(null);\n    const error = ref(null);\n    const process = ref(false);\n    return { error, process, result };\n  };\n\n  const send = async (tx, call, subscription = false) => {\n    tx.result.value = null;\n    tx.error.value = null;\n    tx.process.value = true;\n    try {\n      if (subscription) {\n        await checkWeight(call, subscription);\n        robonomics.accountManager.useSubscription(subscription);\n      }\n      const nonce = await robonomics.api.rpc.system.accountNextIndex(\n        robonomics.accountManager.account.address\n      );\n      tx.result.value = await robonomics.accountManager.signAndSend(call, {\n        nonce\n      });\n      console.log(\"tx\", tx.result.value.block, tx.result.value.tx);\n    } catch (e) {\n      console.log(e);\n      tx.error.value = e.message;\n    }\n    tx.process.value = false;\n    if (subscription) {\n      robonomics.accountManager.useSubscription(false);\n    }\n    return tx.result;\n  };\n\n  return { createTx, send };\n};\n","import { render } from \"./RwsActivate.vue?vue&type=template&id=09d35dcc\"\nimport script from \"./RwsActivate.vue?vue&type=script&lang=js\"\nexport * from \"./RwsActivate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-setup\n      :onRwsUpdate=\"rwsUpdateActions\"\n      :onUserDelete=\"removeUser\"\n      :onUserAdd=\"addUser\"\n      :onSaveHapass=\"saveHapass\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { encryptor } from \"@/utils/encryptor\";\nimport { Keyring } from \"@polkadot/api\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress, encodeAddress } from \"@polkadot/util-crypto\";\nimport { computed, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const store = useStore();\n\n    const setupOwner = computed(() => {\n      return store.state.robonomicsUIvue.rws.active;\n    });\n\n    const robonomics = useRobonomics();\n    const transaction = useSend();\n    const devices = useDevices(setupOwner);\n    const { account } = useAccount();\n\n    const fillStorage = () => {\n      store.commit(\"rws/setUsers\", devices.devices.value);\n    };\n    watch(devices.devices, fillStorage);\n\n    const rwsUpdateActions = (rws, setStatus) => {\n      if (!rws.owner || !rws.name || !rws.controller || !rws.scontroller) {\n        setStatus(\"error\", \"All fields are required\");\n        return;\n      }\n\n      try {\n        encodeAddress(rws.owner);\n      } catch (error) {\n        setStatus(\"error\", `Owner: ${error.message}`);\n        return;\n      }\n      try {\n        encodeAddress(rws.controller);\n      } catch (error) {\n        setStatus(\"error\", `Controller: ${error.message}`);\n        return;\n      }\n\n      const k = new Keyring();\n      const accountController = k.addFromUri(rws.scontroller, {}, \"ed25519\");\n\n      if (encodeAddress(rws.controller) !== accountController.address) {\n        setStatus(\"error\", \"Bad seed or type not ed25519\");\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n\n    const addUser = async (user, setStatus) => {\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n\n      if (!devices.devices.value.includes(user)) {\n        const call = await robonomics.rws.setDevices([\n          ...devices.devices.value,\n          user\n        ]);\n        const tx = transaction.createTx();\n        if (devices.devices.value.includes(account.value)) {\n          await transaction.send(tx, call, setupOwner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"cancel\");\n          }\n          return;\n        } else {\n          await devices.loadDevices();\n        }\n      }\n      setStatus(\"ok\");\n    };\n\n    const removeUser = async (user, setStatus) => {\n      if (setupOwner.value && setupOwner.value !== account.value) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n      if (devices.devices.value.includes(user)) {\n        const call = await robonomics.rws.setDevices(\n          devices.devices.value.filter((item) => item !== user)\n        );\n        const tx = transaction.createTx();\n        if (devices.devices.value.includes(account.value)) {\n          await transaction.send(tx, call, setupOwner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"cancel\");\n          }\n          return;\n        } else {\n          await devices.loadDevices();\n        }\n      }\n      setStatus(\"ok\");\n    };\n\n    const saveHapass = async (userAddress, userSeed, passToSave, setStatus) => {\n      if (!userAddress || !userSeed || !passToSave) {\n        setStatus(\"error\", \"All fields are required\");\n        return;\n      }\n\n      try {\n        encodeAddress(userAddress);\n      } catch (error) {\n        setStatus(\"error\", error.message);\n        return;\n      }\n\n      const k = new Keyring();\n      const accountUser = k.addFromUri(userSeed, {}, \"ed25519\");\n\n      if (encodeAddress(userAddress) !== accountUser.address) {\n        setStatus(\"error\", \"Bad seed or type not ed25519\");\n        return;\n      }\n\n      const encodedDevices = devices.devices.value.map((item) =>\n        encodeAddress(item)\n      );\n      if (!encodedDevices.includes(encodeAddress(userAddress))) {\n        setStatus(\"error\", \"User not found in subscription\");\n        return;\n      }\n\n      const setup = store.state.robonomicsUIvue.rws.list.find(\n        (item) => item.owner === setupOwner.value\n      );\n\n      const user = encryptor(userSeed);\n\n      const passwordForAdmin = user.encryptMessage(\n        passToSave,\n        decodeAddress(setup.controller)\n      );\n\n      const passwordForRecovery = user.encryptMessage(\n        passToSave,\n        decodeAddress(userAddress)\n      );\n\n      robonomics.accountManager.account = accountUser;\n\n      const call = await robonomics.datalog.write(\n        JSON.stringify({\n          subscription: setup.owner,\n          ha: setup.controller,\n          admin: u8aToHex(passwordForAdmin),\n          user: u8aToHex(passwordForRecovery)\n        })\n      );\n      const tx = transaction.createTx();\n      await transaction.send(tx, call, setup.owner);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatus(\"error\", tx.error.value);\n        } else {\n          setStatus(\"cancel\");\n          return;\n        }\n      }\n\n      const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n        (item) => item.address === store.state.robonomicsUIvue.polkadot.address\n      );\n      await robonomics.accountManager.setSender(accountOld.address, {\n        type: accountOld.type,\n        extension: store.state.robonomicsUIvue.polkadot.extensionObj\n      });\n\n      setStatus(\"ok\");\n    };\n\n    return {\n      saveHapass,\n      rwsUpdateActions,\n      addUser,\n      removeUser\n    };\n  }\n};\n</script>\n","import { u8aConcat, u8aToU8a } from \"@polkadot/util\";\nimport {\n  ed25519PairFromSeed,\n  encodeAddress,\n  mnemonicToMiniSecret,\n  randomAsU8a\n} from \"@polkadot/util-crypto\";\nimport ed2curve from \"ed2curve\";\nimport nacl from \"tweetnacl\";\n\nfunction naclOpen(sealed, nonce, senderBoxPublic, receiverBoxSecret) {\n  return (\n    nacl.box.open(sealed, nonce, senderBoxPublic, receiverBoxSecret) || null\n  );\n}\nfunction naclSeal(\n  message,\n  senderBoxSecret,\n  receiverBoxPublic,\n  nonce = randomAsU8a(24)\n) {\n  return {\n    nonce,\n    sealed: nacl.box(message, nonce, receiverBoxPublic, senderBoxSecret)\n  };\n}\nfunction convertSecretKeyToCurve25519(secretKey) {\n  return ed2curve.convertSecretKey(secretKey);\n}\nfunction convertPublicKeyToCurve25519(publicKey) {\n  return ed2curve.convertPublicKey(publicKey);\n}\nexport function decryptMessage(\n  encryptedMessageWithNonce,\n  senderPublicKey,\n  secretKey\n) {\n  const messageU8a = u8aToU8a(encryptedMessageWithNonce);\n  return naclOpen(\n    messageU8a.slice(24, messageU8a.length),\n    messageU8a.slice(0, 24),\n    convertPublicKeyToCurve25519(u8aToU8a(senderPublicKey)),\n    convertSecretKeyToCurve25519(secretKey)\n  );\n}\nexport function encryptMessage(\n  message,\n  recipientPublicKey,\n  secretKey,\n  nonceIn\n) {\n  const { nonce, sealed } = naclSeal(\n    u8aToU8a(message),\n    convertSecretKeyToCurve25519(secretKey),\n    convertPublicKeyToCurve25519(u8aToU8a(recipientPublicKey)),\n    nonceIn\n  );\n  return u8aConcat(nonce, sealed);\n}\nexport function getPair(mnemonic) {\n  const seed = mnemonicToMiniSecret(mnemonic);\n  const pair = ed25519PairFromSeed(seed);\n  return pair;\n}\nexport function encryptor(mnemonic) {\n  const pair = getPair(mnemonic);\n  return {\n    pair,\n    address: encodeAddress(pair.publicKey, 32),\n    encodeAddress: (ss58Format = 32) => {\n      return encodeAddress(pair.publicKey, ss58Format);\n    },\n    decryptMessage: (encryptedMessageWithNonce, senderPublicKey) => {\n      return decryptMessage(\n        encryptedMessageWithNonce,\n        senderPublicKey,\n        pair.secretKey\n      );\n    },\n    encryptMessage: (message, recipientPublicKey, nonce) => {\n      return encryptMessage(message, recipientPublicKey, pair.secretKey, nonce);\n    }\n  };\n}\n","import { render } from \"./RwsSetup.vue?vue&type=template&id=073e42e5\"\nimport script from \"./RwsSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-setup create :onRwsUpdate=\"onSave\" />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { Keyring } from \"@polkadot/api\";\nimport { encodeAddress } from \"@polkadot/util-crypto\";\n\nexport default {\n  setup() {\n    let onSave = (rws, setStatus) => {\n      if (!rws.owner || !rws.name || !rws.controller || !rws.scontroller) {\n        setStatus(\"error\", \"All fields are required\");\n        return;\n      }\n\n      try {\n        encodeAddress(rws.owner);\n      } catch (error) {\n        setStatus(\"error\", `Owner: ${error.message}`);\n        return;\n      }\n      try {\n        encodeAddress(rws.controller);\n      } catch (error) {\n        setStatus(\"error\", `Controller: ${error.message}`);\n        return;\n      }\n\n      const k = new Keyring();\n      const accountController = k.addFromUri(rws.scontroller, {}, \"ed25519\");\n\n      if (encodeAddress(rws.controller) !== accountController.address) {\n        setStatus(\"error\", \"Bad seed or type not ed25519\");\n        return;\n      }\n\n      setStatus(\"ok\");\n    };\n    return {\n      onSave\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetupNew.vue?vue&type=template&id=240d214c\"\nimport script from \"./RwsSetupNew.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetupNew.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-grid offset=\"x0\" gap=\"x1\" galign=\"start\" minColumnWidth=\"450px\">\n      <robo-card>\n        <robo-link router=\"/telemetry\">\n          <robo-image src=\"images/services-ha.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link router=\"/telemetry\">Home assistant</robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Integrate Robonomics into your Home assistant dashboard and get\n          Parachain decentralized cloud service all over the word. Manipulate\n          your smart devices bypassing corporate clouds, manage user access\n          wherever you are. Backup your smart home data in blockchain.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://sensors.robonomics.network/#/\">\n          <robo-image src=\"images/services-sensors.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://sensors.robonomics.network/#/\">\n            Sensors Map\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          The decentralized opensource sensors map offers two distinct layers of\n          decentralization at your choise: peer-to-peer connectivity for direct\n          access to sensor data, and the federative concept for accumulating\n          sensor data and displaying measurement history. Anyone can assemble\n          your own sensor using components available on the free market.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://dapp.spot-sdk.education\">\n          <robo-image src=\"images/services-spot.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://dapp.spot-sdk.education\">\n            Boston Dynamics Spot SDK lessons\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Learn and practice with the Boston Dynamics Spot robot wherever you\n          are. After each lesson you will receive a captured video of the robot\n          movements and a printable PDF certificate.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://telescope.merklebot.com/#/\">\n          <robo-image src=\"images/services-telescope.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://telescope.merklebot.com/#/\">\n            An Autonomous Telescope Minting RMRK NFT's\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Connect to an autonomous telescope in the dark night of the Atacama\n          desert in Chile to capture an astronomical object and mint unique NFTs\n          in a few clicks.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://dapp.ipci.io/#/offsetting\">\n          <robo-image src=\"images/services-offsetting.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://dapp.ipci.io/#/offsetting\">\n            Smart Building Offsetting\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Carbon footprint clearance for smart buildings based on geolocation\n          and energy consumption information.\n        </robo-text>\n      </robo-card>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n","import { render } from \"./Services.vue?vue&type=template&id=7aac4d70\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-template-devices-layout\n    :datalog=\"datalog\"\n    :config=\"config\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { encryptor } from \"@/utils/encryptor\";\nimport { getConfigCid, getLastDatalog, parseJson } from \"@/utils/telemetry\";\nimport { stringToU8a, u8aToString } from \"@polkadot/util\";\nimport { onUnmounted, reactive, ref, watch, watchEffect } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const datalog = ref(null);\n    const config = ref(null);\n    const datalogCid = ref(\"\");\n    const configCid = ref(\"\");\n    const updateTime = ref(null);\n    const setup = reactive({ controller: null, admin: null });\n\n    const robonomics = useRobonomics();\n    const store = useStore();\n    const ipfs = useIpfs();\n    const transaction = useSend();\n    const devices = useDevices();\n\n    const notify = (text, timeout = 3000) => {\n      store.dispatch(\"app/setStatus\", {\n        value: text,\n        timeout\n      });\n      console.log(text);\n    };\n    const logger = (data, ...props) => {\n      console.log(data);\n      if (props.length) {\n        console.log(props);\n      }\n    };\n\n    let unsubscribeDatalog;\n    const watchDatalog = async () => {\n      unsubscribeDatalog = await robonomics.datalog.on(\n        { method: \"NewRecord\" },\n        (results) => {\n          const r = results.filter((item) => {\n            return (\n              item.success &&\n              item.data[0].toHuman() === setup.controller.address\n            );\n          });\n          for (const item of r) {\n            console.log(item.data[1].toString(), item.data[2].toHuman());\n            updateTime.value = item.data[1].toNumber();\n            datalogCid.value = item.data[2].toHuman();\n          }\n        }\n      );\n    };\n\n    onUnmounted(() => {\n      if (unsubscribeDatalog) {\n        unsubscribeDatalog();\n      }\n    });\n\n    const catFileContoller = async (controller, cid) => {\n      if (!cid) {\n        return false;\n      }\n      let result;\n      try {\n        result = await ipfs.catViaGateway(\n          store.state.robonomicsUIvue.ipfs.activegateway,\n          cid,\n          2\n        );\n      } catch (_) {\n        try {\n          const res = await ipfs.catViaGateways(\n            store.state.robonomicsUIvue.ipfs.gateways,\n            cid\n          );\n          store.commit(\"ipfs/setActiveGateway\", res.gateway);\n          result = res.result;\n        } catch (error) {\n          console.log(error.message);\n        }\n      }\n\n      if (result) {\n        try {\n          const seed = controller.decryptMessage(\n            result[controller.address],\n            controller.pair.publicKey\n          );\n          const admin = encryptor(u8aToString(seed));\n          const data = admin.decryptMessage(\n            result.data,\n            controller.pair.publicKey\n          );\n          return parseJson(u8aToString(data));\n        } catch (error) {\n          console.log(error.message);\n        }\n      }\n      return false;\n    };\n\n    const loadSetup = () => {\n      if (!store.state.robonomicsUIvue.rws.active) {\n        return;\n      }\n      notify(`Load setup`);\n      logger({ owner: store.state.robonomicsUIvue.rws.active });\n      const setupRaw = store.state.robonomicsUIvue.rws.list.find(\n        (item) => item.owner === store.state.robonomicsUIvue.rws.active\n      );\n      if (setupRaw) {\n        try {\n          setup.controller = encryptor(setupRaw.scontroller);\n          setup.admin = setupRaw.owner;\n          return;\n        } catch (error) {\n          console.log(error);\n        }\n      }\n      setup.controller = null;\n      setup.admin = null;\n    };\n\n    const findTelemetryCid = async () => {\n      if (!setup.controller) {\n        notify(\"Error: Not found controller\");\n        return;\n      }\n      notify(`Telemetry search`);\n      logger(`findTelemetryCid start`);\n      try {\n        configCid.value = \"\";\n        datalogCid.value = \"\";\n        const datalog = await getLastDatalog(\n          robonomics,\n          setup.controller.address\n        );\n        updateTime.value = datalog.timestamp;\n        datalogCid.value = datalog.cid;\n      } catch (error) {\n        console.log(error);\n      }\n      logger(\"findTelemetryCid end\");\n    };\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.active,\n      () => {\n        devices.owner.value = store.state.robonomicsUIvue.rws.active;\n        loadSetup();\n      },\n      { immediate: true }\n    );\n\n    watchEffect(() => {\n      if (unsubscribeDatalog) {\n        unsubscribeDatalog();\n      }\n      if (setup.controller) {\n        findTelemetryCid();\n        watchDatalog();\n      } else {\n        configCid.value = \"\";\n        datalogCid.value = \"\";\n      }\n    });\n\n    watch(datalogCid, async () => {\n      notify(\"Load datalog\");\n      logger(\"load datalog start\");\n      logger({ controller: setup.controller.address, cid: datalogCid.value });\n      if (datalogCid.value) {\n        const result = await catFileContoller(\n          setup.controller,\n          datalogCid.value\n        );\n        if (result) {\n          datalog.value = result;\n          notify(\"Datalog loaded\");\n          logger(JSON.stringify(datalog.value));\n\n          if (!configCid.value) {\n            logger(`twin id ${result.twin_id}`);\n            configCid.value = await getConfigCid(\n              robonomics,\n              setup.controller.address,\n              result.twin_id\n            );\n          }\n        } else {\n          notify(\"Error: datalog not found in ipfs\");\n        }\n      } else {\n        datalog.value = null;\n      }\n      logger(\"load datalog end\");\n    });\n\n    watch(configCid, async () => {\n      notify(\"Load config\");\n      logger(\"load config start\");\n      logger({ controller: setup.controller.address, cid: configCid.value });\n      if (configCid.value) {\n        const result = await catFileContoller(\n          setup.controller,\n          configCid.value\n        );\n        if (result) {\n          config.value = result;\n          notify(\"Config loaded\");\n          logger(JSON.stringify(config.value));\n        } else {\n          notify(\"Error: config not found in ipfs\");\n        }\n      } else {\n        config.value = null;\n      }\n      logger(\"load config end\");\n    });\n\n    const setStatusLaunch = (command, status) => {\n      store.commit(\n        \"rws/setLaunch\",\n        JSON.stringify({ ...command, tx: { tx_status: status } })\n      );\n    };\n    const launch = async (command) => {\n      if (command.tx.tx_status !== \"pending\") {\n        return;\n      }\n\n      notify(`Launch command`);\n      logger(`command ${JSON.stringify(command)}`);\n\n      if (\n        robonomics.accountManager.account.address !==\n          store.state.robonomicsUIvue.rws.active &&\n        !devices.devices.value.includes(\n          robonomics.accountManager.account.address\n        )\n      ) {\n        notify(`Error: You do not have access to device management.`);\n        setStatusLaunch(command, \"error\");\n        return;\n      }\n\n      if (!ipfs.isAuth()) {\n        notify(`Authorization on ipfs node`);\n        try {\n          const signature = (\n            await robonomics.accountManager.account.signMsg(\n              stringToU8a(robonomics.accountManager.account.address)\n            )\n          ).toString();\n          ipfs.auth(\n            setup.admin,\n            robonomics.accountManager.account.address,\n            signature\n          );\n        } catch (error) {\n          if (error.message === \"Cancelled\") {\n            setStatusLaunch(command, \"declined\");\n          } else {\n            logger(error);\n            setStatusLaunch(command, \"error\");\n          }\n          return;\n        }\n        setStatusLaunch(command, \"approved\");\n      }\n\n      let cid;\n      try {\n        cid = await ipfs.add(JSON.stringify(command.launch));\n      } catch (error) {\n        setStatusLaunch(command, \"error\");\n        notify(`Error: ${error.message}`);\n        return;\n      }\n      logger(`launch ipfs file ${cid.path}`);\n\n      notify(`Send launch`);\n      const call = robonomics.launch.send(setup.controller.address, cid.path);\n      const tx = transaction.createTx();\n      await transaction.send(tx, call, setup.admin);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          setStatusLaunch(command, \"error\");\n          notify(`Error: ${tx.error.value}`);\n        } else {\n          setStatusLaunch(command, \"declined\");\n          notify(\"Calcel\");\n        }\n      } else {\n        setStatusLaunch(command, \"success\");\n        notify(\"Launch sended\");\n      }\n    };\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { datalog, config, updateTime, configCid, launch };\n  }\n};\n</script>\n","import { useAccount } from \"@/hooks/useAccount\";\nimport { inject, watch } from \"vue\";\n\nexport function useIpfs() {\n  const { account } = useAccount();\n  const { instance } = inject(\"IpfsProvider\");\n\n  watch(account, async () => {\n    if (instance.value) {\n      instance.value.authClear();\n    }\n  });\n\n  return instance.value;\n}\n","import { u8aToString } from \"@polkadot/util\";\nimport { utils } from \"robonomics-interface\";\n\nconst clearJson = (string) => {\n  return string\n    .replaceAll(\"'\", '\"')\n    .replaceAll(\"\\\\\", \"\")\n    .replaceAll('\"\"', '\"')\n    .replaceAll(\"True\", \"true\")\n    .replaceAll(\"False\", \"false\")\n    .replaceAll(\"None\", '\"None\"');\n};\n\nexport const parseJson = (string) => {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    console.log(\"error parse 1\");\n  }\n  try {\n    return JSON.parse(clearJson(string));\n  } catch (error) {\n    console.log(\"error parse 2\");\n    console.log(string);\n  }\n  return false;\n};\n\nexport const getLastDatalog = async (robonomics, controller) => {\n  console.log(\"getLastDatalog\");\n  if (!controller) {\n    return false;\n  }\n  const result = await robonomics.datalog.read(controller);\n  if (!result.length) {\n    return false;\n  }\n  const last = result[result.length - 1];\n  return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n};\n\nexport const getConfigCid = async (robonomics, controller, twin_id) => {\n  console.log(\"getConfigCid\");\n  if (!controller || !twin_id) {\n    return false;\n  }\n  const twin = await robonomics.twin.getTwin(twin_id);\n  if (!twin) {\n    return false;\n  }\n  const configHex = Object.keys(twin).find((key) => twin[key] === controller);\n  return utils.hexToCid(configHex);\n};\n","import { render } from \"./Telemetry.vue?vue&type=template&id=6c2e70b4\"\nimport script from \"./Telemetry.vue?vue&type=script&lang=js\"\nexport * from \"./Telemetry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"./views/Home.vue\";\nimport PathNotFound from \"./views/PathNotFound.vue\";\nimport RwsActivate from \"./views/RwsActivate.vue\";\nimport RwsSetup from \"./views/RwsSetup.vue\";\nimport RwsSetupNew from \"./views/RwsSetupNew.vue\";\nimport Services from \"./views/Services.vue\";\nimport Telemetry from \"./views/Telemetry.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    meta: {\n      title: \"Dashboard\"\n    }\n  },\n  {\n    path: \"/rws-buy\",\n    name: \"rwsActivate\",\n    component: RwsActivate,\n    meta: {\n      title: \"RWS activation\"\n    }\n  },\n  {\n    path: \"/rws-setup\",\n    name: \"rwsSetup\",\n    component: RwsSetup,\n    meta: {\n      title: \"RWS setup\"\n    }\n  },\n  {\n    path: \"/rws-setup-new\",\n    name: \"rwsSetupNew\",\n    component: RwsSetupNew,\n    meta: {\n      title: \"RWS setup new\"\n    }\n  },\n  {\n    path: \"/telemetry\",\n    name: \"telemetry\",\n    component: Telemetry,\n    meta: {\n      title: \"Smart devices\"\n    }\n  },\n  {\n    path: \"/services\",\n    name: \"services\",\n    component: Services,\n    meta: {\n      title: \"Services\"\n    }\n  },\n  { path: \"/:pathMatch(.*)*\", component: PathNotFound }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    name: \"Vue\"\n  }\n});\n\nexport default store;\n","import { fromUnit } from \"./tools\";\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$filters = {\n      balance(value, decimals, symbol) {\n        if (typeof value === \"string\" || typeof value === \"number\") {\n          return `${fromUnit(value, decimals, 4)} ${symbol}`;\n        }\n        return \"\";\n      }\n    };\n  }\n};\n","import { Buffer } from \"buffer\";\nimport { robonomicsUI } from \"robonomics-ui-vue\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport ipfs from \"./plugins/ipfs\";\nimport robonomics from \"./plugins/robonomics\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport filters from \"./utils/filters\";\n\nimport \"robonomics-ui-vue/style.css\";\n\nwindow.Buffer = Buffer;\n\nconst app = createApp(App);\n\napp\n  .use(router)\n  .use(store)\n  .use(filters)\n  .use(robonomics, {\n    // endpoint: \"ws://127.0.0.1:9944\"\n    endpoint: \"wss://kusama.rpc.robonomics.network/\"\n  })\n  .use(ipfs, {\n    api: { gateway: \"https://ipfs.url.today\" },\n    gateways: [\n      \"https://ipfs.url.today/ipfs/\",\n      \"https://cf-ipfs.com/ipfs/\",\n      \"https://ipfs.io/ipfs/\",\n      \"https://gateway.pinata.cloud/ipfs/\",\n      \"https://gateway.ipfs.io/ipfs/\",\n      \"https://aira.mypinata.cloud/ipfs/\"\n    ]\n  })\n  .use(robonomicsUI, { store })\n  .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdapp_robonomics_network\"] = self[\"webpackChunkdapp_robonomics_network\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(751); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["$setup","isReady","_createBlock","_component_main_layout","title","_createVNode","_component_router_view","_component_robo_layout","_component_dapp_header","_ctx","_renderSlot","$slots","_component_robo_layout_header","logoIcon","navigation","$data","$props","version","toDecimal","v","Decimal","toString","round","place","todp","fromUnit","decimals","dp","div","pow","toExpNeg","toExpPos","props","type","String","default","inject","data","links","link","this","$router","resolve","name","path","computed","robonomics","toRaw","RobonomicsProvider","instance","value","watch","signer","signRaw","$store","state","robonomicsUIvue","polkadot","address","handlerAccount","handler","extensionObj","immediate","created","res","axios","get","tag_name","_","console","log","methods","unsubscribeBalance","account","accounts","find","item","accountManager","setSender","extension","getBalance","r","transferable","free","sub","feeFrozen","commit","api","registry","chainDecimals","__exports__","useRobonomics","useDevices","initialOwner","owner","ref","devices","loadDevices","async","validateAddress","result","rws","getDevices","map","toHuman","error","useSubscription","dataRaw","reactive","getReferenceCallWeight","consts","referenceCallWeight","getLedger","isEmpty","DAYS_TO_MS","getFreeWeightCalc","ledger","freeWeight","toNumber","lastUpdate","issueTime","now","Date","utps","tps","kind","isLifetime","days","duration_ms","delta","Math","floor","validUntil","dataRawObject","issue_time","isDaily","countMonth","isActive","hasSubscription","loadLedger","components","DappHeader","setup","store","useStore","subscription","active","MainLayout","IpfsProvider","router","useRouter","route","useRoute","process","dispatch","gateways","meta","document","render","IpfsApiClient","constructor","endpoint","authHeader","_create","client","create","_options","url","headers","authorization","isAuth","auth","signature","authHeaderRaw","Buffer","from","authClear","ls","cid","files","file","push","cat","decoder","TextDecoder","content","chunk","decode","stream","add","catViaGateway","gateway","attempts","index","Error","catViaGateways","message","install","app","params","provide","AccountManagerDapp","AccountManager","keyring","config","super","loadAll","setReady","beforeSetSender","getPair","loadInjected","afterSetSender","isInjected","setSigner","signMsg","u8aToHex","u8aWrapBytes","undefined","Robonomics","createInstance","setAccountManager","list","window","location","href","$route","_component_robo_layout_section","_component_robo_template_rws_buy","price","activationtime","available","freeAuctions","rwsExpiration","expiredate","onOnActivate","onActivate","useAccount","unsubscribe","onChange","useBalance","balance","useSend","getCallWeight","tx","paymentInfo","weight","checkWeight","freeWeightCalc","callWeight","createTx","send","call","nonce","rpc","system","accountNextIndex","signAndSend","block","e","unsubscribeBlock","unsubscribeAccount","getFreeAuctions","length","events","onBlock","minimalBid","getMinimalBid","bnToBn","onUnmounted","transaction","lt","setStatus","bid","Number","getFirtsFreeAuction","includes","utility","batch","setDevices","stopWatchEffect","watchEffect","priceFormat","_component_robo_template_rws_setup","onRwsUpdate","rwsUpdateActions","onUserDelete","removeUser","onUserAdd","addUser","onSaveHapass","saveHapass","naclOpen","sealed","senderBoxPublic","receiverBoxSecret","nacl","open","naclSeal","senderBoxSecret","receiverBoxPublic","randomAsU8a","convertSecretKeyToCurve25519","secretKey","ed2curve","convertPublicKeyToCurve25519","publicKey","decryptMessage","encryptedMessageWithNonce","senderPublicKey","messageU8a","u8aToU8a","slice","encryptMessage","recipientPublicKey","nonceIn","u8aConcat","mnemonic","seed","mnemonicToMiniSecret","pair","ed25519PairFromSeed","encryptor","encodeAddress","ss58Format","setupOwner","fillStorage","controller","scontroller","k","Keyring","accountController","addFromUri","user","filter","userAddress","userSeed","passToSave","accountUser","encodedDevices","passwordForAdmin","decodeAddress","passwordForRecovery","datalog","write","JSON","stringify","ha","admin","accountOld","onSave","_component_robo_grid","offset","gap","galign","minColumnWidth","_component_robo_card","_component_robo_link","_component_robo_image","src","_component_robo_text","size","script","_component_robo_template_devices_layout","updateTime","useIpfs","clearJson","string","replaceAll","parseJson","parse","getLastDatalog","read","last","timestamp","u8aToString","getConfigCid","twin_id","twin","getTwin","configHex","Object","keys","key","utils","datalogCid","configCid","ipfs","notify","text","timeout","logger","unsubscribeDatalog","watchDatalog","on","method","results","success","catFileContoller","activegateway","loadSetup","setupRaw","findTelemetryCid","setStatusLaunch","command","status","tx_status","launch","stringToU8a","routes","component","Home","RwsActivate","RwsSetup","RwsSetupNew","Telemetry","Services","PathNotFound","createRouter","history","createWebHashHistory","createStore","globalProperties","$filters","symbol","createApp","App","use","filters","robonomicsUI","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}